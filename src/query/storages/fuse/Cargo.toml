[package]
name = "databend-common-storages-fuse"
version = { workspace = true }
authors = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
edition = { workspace = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
doctest = false
test = false

[dependencies]
databend-common-arrow = { path = "../../../common/arrow" }
databend-common-base = { path = "../../../common/base" }
databend-common-cache = { path = "../../../common/cache" }
databend-common-catalog = { path = "../../catalog" }
databend-common-exception = { path = "../../../common/exception" }
databend-common-expression = { path = "../../expression" }
databend-common-functions = { path = "../../functions" }
databend-common-io = { path = "../../../common/io" }
databend-common-meta-app = { path = "../../../meta/app" }
databend-common-meta-types = { path = "../../../meta/types" }
databend-common-metrics = { path = "../../../common/metrics" }
databend-common-pipeline-core = { path = "../../pipeline/core" }
databend-common-pipeline-sinks = { path = "../../pipeline/sinks" }
databend-common-pipeline-sources = { path = "../../pipeline/sources" }
databend-common-pipeline-transforms = { path = "../../pipeline/transforms" }
databend-common-sharing = { path = "../../sharing" }
databend-common-sql = { path = "../../sql" }
databend-common-storage = { path = "../../../common/storage" }
jsonb = { workspace = true }

databend-storages-common-blocks = { path = "../common/blocks" }
databend-storages-common-cache = { path = "../common/cache" }
databend-storages-common-cache-manager = { path = "../common/cache_manager" }
databend-storages-common-index = { path = "../common/index" }
databend-storages-common-pruner = { path = "../common/pruner" }
databend-storages-common-table-meta = { path = "../common/table_meta" }

ahash = "0.8.3"
async-backtrace = { workspace = true }
async-channel = "1.7.1"
async-trait = { workspace = true }
backoff = { version = "0.4.0", features = ["futures", "tokio"] }
bytes = { workspace = true }
chrono = { workspace = true }
enum-as-inner = "0.5"
futures = { workspace = true }
futures-util = { workspace = true }
indexmap = "2.0.0"
itertools = { workspace = true }
log = { workspace = true }
metrics = "0.20.1"
minitrace = { workspace = true }
opendal = { workspace = true }
parquet-format-safe = "0.2"
rand = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
sha2 = "0.10.6"
siphasher = "0.3.10"
streaming-decompression = "0.1.2"
sys-info = "0.9"

typetag = { workspace = true }
uuid = { workspace = true }
