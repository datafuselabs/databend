statement ok
DROP DATABASE IF EXISTS map_func_test

statement ok
CREATE DATABASE IF NOT EXISTS map_func_test

statement ok
USE map_func_test

query TT
select map_keys({}), map_values({})
----
[] []

query TT
select map_size({})
----
0

query TT
select map_keys({'k1':1,'k2':2,'k3':null}), map_values({'k1':1,'k2':2,'k3':null})
----
['k1','k2','k3'] [1,2,NULL]

statement ok
create table t(col1 Map(String, String Null) Not Null, col2 Map(String, Int Null) Null)

statement ok
insert into t values({'k1':'v1','k2':'v2','k3':null},{'a':10,'b':20}), ({'k5':'v5','k6':'v6'}, {'d':40,'e':null,'f':50}), ({}, null)

query TT
select map_keys(col1), map_keys(col2) from t
----
['k1','k2','k3'] ['a','b']
['k5','k6'] ['d','e','f']
[] NULL

query TT
select map_size(col1), map_size(col2) from t
----
3 2
2 3
0 NULL

query TT
select map_values(col1), map_values(col2) from t
----
['v1','v2',NULL] [10,20]
['v5','v6'] [40,NULL,50]
[] NULL

statement ok
drop table if exists map_cat_test all

statement ok
CREATE TABLE map_cat_test(s_no Int, p_prof_name Map(String, String) Not Null, p_prof_dob Map(String, String) Not Null);

statement ok
INSERT INTO map_cat_test VALUES (1, {'name_r11': 'John Smith', 'name_r12': 'Emily Johnson'}, {'dob_11': '1988-07-12', 'dob_12': '1995-03-21'}),
(2, {'name_r21': 'Michael Brown', 'name_22': 'Sarah Davis'}, {'dob_21': '1978-08-17', 'dob_22': '1989-07-19'}),
(3, {'name_r31': 'David Wilson', 'name_32': 'white rose'}, {'dob_31': '1998-09-02', 'dob_32': '1992-05-18'});

query
SELECT * FROM map_cat_test LIMIT 3;
----
1 {'name_r11':'John Smith','name_r12':'Emily Johnson'} {'dob_11':'1988-07-12','dob_12':'1995-03-21'}
2 {'name_r21':'Michael Brown','name_22':'Sarah Davis'} {'dob_21':'1978-08-17','dob_22':'1989-07-19'}
3 {'name_r31':'David Wilson','name_32':'white rose'} {'dob_31':'1998-09-02','dob_32':'1992-05-18'}

query
SELECT
  s_no,
  MAP_CAT(p_prof_name, p_prof_dob) AS concatenated_map
FROM
  map_cat_test;
----
1 {'name_r11':'John Smith','name_r12':'Emily Johnson','dob_11':'1988-07-12','dob_12':'1995-03-21'}
2 {'name_r21':'Michael Brown','name_22':'Sarah Davis','dob_21':'1978-08-17','dob_22':'1989-07-19'}
3 {'name_r31':'David Wilson','name_32':'white rose','dob_31':'1998-09-02','dob_32':'1992-05-18'}


# Test empty maps
query
SELECT MAP_CAT({}, {})
----
{}

query
SELECT MAP_CAT({}, {'k1': 'v1'})
----
{'k1':'v1'}

query
SELECT MAP_CAT({'k1': 'v1'}, {})
----
{'k1':'v1'}

# Test deduplication
query
SELECT MAP_CAT({'k1': 'v1', 'k2': 'v2'}, {'k1': 'abc'})
----
{'k1':'abc','k2':'v2'}

# Test different map sizes
query
SELECT MAP_CAT({'k1': 'v1', 'k2': 'v2'}, {'k3': 'v3'})
----
{'k1':'v1','k2':'v2','k3':'v3'}

query
SELECT MAP_CAT({'k1': 'v1'}, {'k2': 'v2', 'k3': 'v3'})
----
{'k1':'v1','k2':'v2','k3':'v3'}

# Test NULL values
query
SELECT MAP_CAT({'k1': 'v1', 'k2': NULL}, {'k2': 'v2', 'k3': NULL})
----
{'k1':'v1','k2':'v2','k3':NULL}

# Test nested maps
query
SELECT MAP_CAT(
  {'k1': {'nk1': 'nv1'}, 'k2': {'nk2': 'nv2'}},
  {'k2': {'nk3': 'nv3'}, 'k3': {'nk4': 'nv4'}}
)
----
{'k1':{'nk1':'nv1'},'k2':{'nk3':'nv3'},'k3':{'nk4':'nv4'}}

query
SELECT MAP_CAT(
  {'k1': {'nk1': 'nv1'}, 'k2': {'nk2': 'nv2'}},
  {'k3': {'nk1': 'new_nv1'}, 'k4': {'nk3': 'nv3'}}
)
----
{'k1':{'nk1':'nv1'},'k2':{'nk2':'nv2'},'k3':{'nk1':'new_nv1'},'k4':{'nk3':'nv3'}}

# Test map_contains_key function
statement ok
CREATE TABLE map_contains_test(col_str Map(String, String Null) Not Null, col_int Map(String, Int Null) Null)

statement ok
INSERT INTO map_contains_test VALUES ({'k1':'v1','k2':'v2','k3':null},{'a':10,'b':20}), ({'k5':'v5','k6':'v6'}, {'d':40,'e':null,'f':50}), ({}, null)

query TT
select map_contains_key(col_str, 'k1'), map_contains_key(col_str, 'k2'), map_contains_key(col_int, 'a') from map_contains_test
----
1 1 1
0 0 0
0 0 NULL

# Test empty map
query
SELECT map_contains_key({}, 'k1')
----
0

# Test non-existent key
query
SELECT map_contains_key({'k1': 'v1', 'k2': 'v2'}, 'k3')
----
0

# Test NULL value
query
SELECT map_contains_key({'k1': 'v1', 'k2': NULL}, 'k2')
----
1

query
SELECT map_insert({'k1': 'v1', 'k2': 'v2'}, 'k3', NULL)
----
{'k1':'v1','k2':'v2','k3':NULL}

query
SELECT map_insert({'k1': 'v1', 'k2': 'v2'}, 'k1', 'new_v1')
----
{'k1':'new_v1','k2':'v2'}

query
SELECT map_insert({}, 'k1', 'v1')
----
{'k1':'v1'}

query
SELECT map_insert({'k1': 'v1', 'k2': 'v2'}, 'k2', 'v3', true)
----
{'k1':'v1','k2':'v3'}

query
SELECT map_insert({'k1': 'v1', 'k2': 'v2'}, 'k2', 'v3', false)
----
{'k1':'v1','k2':'v2'}

statement ok
CREATE TABLE map_insert_test(col_str Map(String, String Null) Not Null, col_int Map(String, Int Null) Null);

statement ok
INSERT INTO map_insert_test VALUES ({'k1':'v1','k2':'v2','k3':null},{'a':10,'b':20}), ({'k5':'v5','k6':'v6'}, {'d':40,'e':null,'f':50}), ({}, NULL);

query
SELECT map_insert(col_str, 'k1', 'k100', true) as update_str, map_insert(col_str, 'k1', 'k100', false) as origin_str
FROM map_insert_test;
----
{'k1':'k100','k2':'v2','k3':NULL} {'k1':'v1','k2':'v2','k3':NULL}
{'k5':'v5','k6':'v6','k1':'k100'} {'k5':'v5','k6':'v6','k1':'k100'}
{'k1':'k100'} {'k1':'k100'}

query
SELECT map_insert(col_int, 'k1', 100)
FROM map_insert_test;
----
{'a':10,'b':20,'k1':100}
{'d':40,'e':NULL,'f':50,'k1':100}
{'k1':100}

statement ok
DROP DATABASE map_func_test
